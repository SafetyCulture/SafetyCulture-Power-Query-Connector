name: Release-Connector

on:
  push:
    tags:
      - '*'

jobs:
  release:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2
    - name: Build connector
      shell: pwsh
      env:
        CERT_DATA: ${{ secrets.CERT_DATA }}
        CERT_PASS: ${{ secrets.CERT_PASS }}
        TEST_SECRET: ${{ secrets.TEST_SECRET }}
      run: .\build.ps1
    - name: Set output
      id: vars
      run: echo ::set-output name=tag::${GITHUB_REF#refs/*/}
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.vars.outputs.tag }}
        release_name: ${{ steps.vars.outputs.tag }}
        draft: true
        prerelease: true
    - name: Upload Signed Connector
      id: upload-signed-connector
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./build/iAuditorSigned.pqx
        asset_name: iAuditorSigned.pqx
        asset_content_type: application/octet-stream
    - name: Upload Thumbprint
      id: upload-thumbprint
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./Thumbprint.txt
        asset_name: Thumbprint.txt
        asset_content_type: text/plain
    - name: Upload Sample Report
      id: upload-sample-report
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./Sample Report.pbit
        asset_name: Sample Report.pbit
        asset_content_type: application/octet-stream